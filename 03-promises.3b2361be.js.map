{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAoCpC,SAASC,EAAQC,GACfN,EAAAO,OAAOC,QAAQF,E,CAGjB,SAASG,EAAMC,GACbV,EAAAO,OAAOI,QAAQD,E,CAxCjBR,EAAKU,iBAAiB,UAEtB,SAAwBC,GACtBA,EAAEC,iBACJ,IAAIC,EAAQC,OAAOd,EAAKa,MAAMT,OAC1BW,EAAOD,OAAOd,EAAKe,KAAKX,OACxBY,EAASF,OAAOd,EAAKgB,OAAOZ,OAC5Ba,EAAQ,EACRC,EAAaL,EAAQE,EACzB,MAAMI,EAAYC,aAAY,KAC1BH,GAAS,EACTC,GAAcH,EAUlB,SAAuBM,EAAUR,GAC/B,MAAMS,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACNI,EAAQ,uBAAqBL,QAAiBR,OAE5Cc,EAAK,sBAAoBN,QAAeR,MAAU,GAEjDA,EAAM,G,CAjBTgB,CAAcZ,EAAOC,GAAYY,KAAK3B,GAAS4B,MAAMxB,GAEjDU,IAAUD,GACZgB,cAAcb,EAAU,GAEzBJ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form')\nform.addEventListener('submit', onFormSubmited)\n\nfunction onFormSubmited(e) {\n  e.preventDefault();\nlet delay = Number(form.delay.value);\nlet step = Number(form.step.value);\nlet amount = Number(form.amount.value);\nlet count = 0;\nlet difference = delay - step;\nconst makeCount = setInterval(() => {\n    count += 1;\n    difference += step;\n\n    createPromise(count, difference).then(Success).catch(Error);\n\n    if (count === amount) {\n      clearInterval(makeCount);\n    }\n  }, step);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n    resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    reject(`❌ Rejected promise ${position} in ${delay}ms`)\n  }\n    }, delay)\n  })\n  \n}\n\nfunction Success(value) {\n  Notify.success(value)\n}\n\nfunction Error(error) {\n  Notify.failure(error)\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$Success","value","Notify","success","$47d4ff9957288465$var$Error","error","failure","addEventListener","e","preventDefault","delay","Number","step","amount","count","difference","makeCount","setInterval","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$createPromise","then","catch","clearInterval"],"version":3,"file":"03-promises.3b2361be.js.map"}